import spacy
from spacy.matcher import Matcher
from flask import Flask, request, jsonify

nlp = spacy.load("en_core_web_sm")

app = Flask(__name__)

#pattern-response pairs for the chatbot
patterns = [
    (r'(hi|hello|hey|hola)', ['Hello!', 'Hi there!', 'Hey!', 'Hi, MeloBot this side, what\'s up?']),
    (r'(what can you do|what can melobot do)', ['I can help you with music recommendations, tell you about things which can be done on melosynthia and can clarify your doubts regarding this ai', 'I can tell you about NFTs', 'I am but a robot after all']),
    (r'(how are you|how are you doing)', ['I am good, thank you!', 'I am just a chatbot, but I am fine.']),
    (r'what can you do', ['I can help you generate music, create NFTs of generated lyrics, and provide music-related recommendations. Just ask me!']),
    (r'(how do you know what music to recommend to me)', ['I use machine learning algorithms to analyze your music preferences and past listening habits. The more you interact with me and provide feedback, the better I can fine-tune my recommendations.']),
    (r'(can you suggest new and trending songs or artists)', ['Absolutely! I can keep you updated on the latest music releases, popular artists, and trending tracks in various genres.']),
    (r'who created MeloSynthia', ['team web3 sailors created melosynthia']),
    (r'what type of nfts does melosynthia makes', ['musical nfts']),
    (r'who is greatest footballer player in the world?', ['Lionel Messi is considered as the greatest player to play the game of football']),
    (r'how can I generate music', [" You can generate music by giving a prompt text as an input and selecting your preferences and then simply press enter. The music+lyrics will generate automatically afterwards."]),
    (r'how can I make nfts of my generated lyrics', ["After generating, By simply clicking on the nft button you can make it as an NFT and list them in our marketplace."]),
    (r'give me an example prompt for how can I generate professional tunes', [" Various prompt examples are:\n1. A 90's pop culture music with drum beats\n2. American style beats with Indian music\n3. Taylor Swift's style of lyrics on ambient music tunes"]),(r"what is Tron", ["Tron is a blockchain-based decentralized platform that aims to build a global, free content entertainment system with distributed storage technology. It focuses on enabling the creation and sharing of digital content using blockchain and peer-to-peer (P2P) technology."]),
    (r"how does Tron work", ["Tron uses a Delegated Proof of Stake (DPoS) consensus mechanism to validate transactions and produce blocks. It also supports smart contracts, allowing developers to create decentralized applications (DApps) on the Tron blockchain."]),
    (r"what is BTT", ["BTT is a cryptocurrency token built on the Tron blockchain. It is designed to be used within the BitTorrent ecosystem to incentivize users to share and seed files on the BitTorrent network. BTT can also be used for various other applications and services within the Tron ecosystem."]),
    (r"how can I use BTT", ["You can use BTT to tip content creators on the BitTorrent network, purchase premium features on BitTorrent Speed, or trade it on cryptocurrency exchanges. It's a versatile token that can be used in various ways within the BitTorrent and Tron ecosystems."]),
    (r"what are the benefits of using Tron and BTT", ["Using Tron and BTT can provide benefits such as faster transaction speeds, lower fees, and access to a wide range of decentralized applications and services. Additionally, BTT can incentivize content sharing and contribute to a more robust and decentralized file-sharing ecosystem."]),
    (r"how can I get started with Tron and BTT", ["To get started with Tron and BTT, you can create a Tron wallet, acquire TRX (Tron's native cryptocurrency), and explore the Tron and BitTorrent ecosystems. You can also participate in the Tron and BTT communities to learn more and stay updated on developments."]),
    (r"what is the future of Tron and BTT", ["The future of Tron and BTT looks promising, with ongoing developments and partnerships. Tron continues to expand its ecosystem, and BTT is being integrated into various BitTorrent products. Both technologies are positioned to play significant roles in the blockchain and decentralized content sharing spaces."]),
    (r"tell me more about MeloSynthia", ["MeloSynthia is an AI-powered music generation and NFT creation platform. It uses advanced algorithms to create unique music compositions and lyrics that you can turn into NFTs. You can also explore our marketplace to buy and sell musical NFTs created by other users."]),
    (r"how do I create an account on MeloSynthia", ["To create an account on MeloSynthia, visit our website and click on the 'Sign Up' button. Follow the on-screen instructions to complete the registration process. Once you have an account, you can start generating music and NFTs."]),
    (r"can I customize the music generated by MeloSynthia", ["Yes, you can customize the music generated by MeloSynthia by providing specific preferences and prompts when generating music. This allows you to tailor the music to your liking."]),
    (r"what are the benefits of using MeloSynthia for music creation", ["Using MeloSynthia for music creation offers benefits such as quick and AI-assisted music composition, the ability to turn your creations into NFTs for potential earnings."]),
    (r"can I sell my musical NFTs on other marketplaces", ["Yes, you can sell your musical NFTs created on MeloSynthia on other NFT marketplaces as well. MeloSynthia provides you with the flexibility to list your NFTs on different platforms."]),
    (r"how can I earn from my musical NFTs", ["You can earn from your musical NFTs by selling them in the MeloSynthia marketplace"]),
    (r"tell me a music-related joke", ["Why did the music teacher go to jail? Because she got caught with too many sharp objects!"]),
    (r"who is your favorite musician", ["I don't have any personal preferences, there are a lot of good genres and music out there"]),
    (r"what's the weather like today", ["I'm sorry, I can't provide real-time weather information. You might want to check a weather website or app for the latest updates."]),
    (r"can you recommend some relaxing music", ["Of course! How about some instrumental piano music or ambient sounds to help you relax?"]),
    (r"what's your favorite NFT project", ["I'm just a chatbot, so I don't have personal favorites. However, there are many exciting NFT projects out there."]),
    (r'(.*)', ["I'm sorry, I don't understand. You can ask me about generating music or for general information."]),

]

matcher = Matcher(nlp.vocab)

for pattern, responses in patterns:
    pattern_tokens = [{"TEXT": {"REGEX": pattern}}]
    matcher.add(pattern,[pattern_tokens])  

# Function to chat with the user
def get_chatbot_response(user_input):
    doc = nlp(user_input)
    matches = matcher(doc)
    if matches:
        match_id, _, _ = matches[0]
        response = patterns[match_id][1]  #responses for the matched pattern
    else:
        response = ["I'm sorry, I don't understand. You can ask me about generating music, making NFTs, or for general information."]
    return response[0]

# Route for handling chatbot requests
@app.route('/api/melobot', methods=['POST'])
def chatbot_response_endpoint():
    user_message = request.json.get('message')
    chatbot_response = get_chatbot_response(user_message)
    return jsonify({'message': chatbot_response})

if __name__ == "__main__":
    app.run(debug=True)
